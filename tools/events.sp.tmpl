#define PLUGIN_AUTHOR "Jared Ballou"
#define PLUGIN_DESCRIPTION "Log events to client or server"
#define PLUGIN_NAME "Event Logger"
#define PLUGIN_VERSION "1.0.0"
#define PLUGIN_WORKING "1"
#define PLUGIN_LOG_PREFIX "EVENTS"
#define PLUGIN_URL "http://jballou.com/insurgency"

public Plugin:myinfo = {
        name            = PLUGIN_NAME,
        author          = PLUGIN_AUTHOR,
        description     = PLUGIN_DESCRIPTION,
        version         = PLUGIN_VERSION,
        url             = PLUGIN_URL
};
#include <sourcemod>
#undef REQUIRE_PLUGIN
#include <updater>

#pragma semicolon 1

public OnPluginStart() {
{% for event, fields in events.iteritems() %}
	HookEvent("{{ event }}", Event_{{ event|title }});
{% endfor %}
	HookUpdater();
}

public void RecordEvent(const char[] name, const char[] fields) {
        LogToGame("\"event\": {\"%s\": { %s }}", name, fields);
}
{% for event, fields in events.iteritems() %}
public void Event_{{ event|title }}(Event event, const char[] name, bool dontBroadcast) {
{% for field, type in fields.iteritems() %}
{% if type in ["byte", "short", "long"] %}
{% set type = "int" %}
{% else %}
{% set type = type %}
{% endif %}
{% if type in ["string"] %}
	char m_{{ field|title }}[256];
	event.GetString("{{ field }}", m_{{ field|title }}, sizeof(m_{{ field|title }}));
{% else %}
	{{ type }} m_{{ field|title }} = event.Get{{ type|title }}("{{ field }}");
{% endif %}
{% endfor %}
	RecordEvent(name, "{% for field, type in fields.iteritems() -%}{% if type in ["string"] %}{% set ptype = "s" %}{% elif type in ["float"] %}{% set ptype = "f" %}{% else %}{% set ptype = "d" %}{% endif %}\"{{field}}\": \"%{{ptype}}\",{%- endfor %}} } ", {{ fields.keys()|join(', ') }});
}
{% endfor %}
	
